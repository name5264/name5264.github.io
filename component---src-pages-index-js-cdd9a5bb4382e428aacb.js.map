{"version":3,"file":"component---src-pages-index-js-cdd9a5bb4382e428aacb.js","mappings":"uNAEaA,EAAYC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,gCAKTC,EAAgBD,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,2DAEC,SAAAE,GAMvB,IALA,IAAMC,EACwC,GAA5CC,KAAKC,MAAqB,EAAdH,EAAMI,MAAa,GAAK,KAChC,EACAF,KAAKC,MAAqB,EAAdH,EAAMI,MAAa,GAAK,KACtCC,EAAY,QACPC,EAAI,EAAGA,EAAIL,EAAYK,IAC9BD,GAAa,SAEf,OAAOA,K,UChBER,EAAYC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,gIAGO,SAAAE,GAAK,OAAIA,EAAMO,MAAMC,QACxB,SAAAR,GAAK,OAAIA,EAAMO,MAAMC,QAMlCC,EAAQX,EAAAA,QAAAA,GAAAA,WAAH,uDAAGA,CAAH,6GAIP,SAAAE,GAAK,OAAIA,EAAMO,MAAMC,QAKnBE,EAAcZ,EAAAA,QAAAA,EAAAA,WAAH,6DAAGA,CAAH,2FAIb,SAAAE,GAAK,OAAIA,EAAMO,MAAMC,QAInBG,EAAOb,EAAAA,QAAAA,IAAAA,WAAH,sDAAGA,CAAH,cCXjB,EAda,SAAC,GAAgC,IAA9Bc,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACzB,OACE,gBAAC,EAAD,CAAWC,QAAS,kBAAMC,EAAAA,EAAAA,UAASH,KACjC,gBAACJ,EAAD,KAAQG,GACR,gBAACF,EAAD,CACEO,wBAAyB,CACvBC,OAAQJ,KAGZ,gBAACH,EAAD,QC6BN,EAlCkB,SAAC,GAAwB,IAAD,EAArBQ,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzB,EAA0BC,EAAAA,SAAe,GAAlCjB,EAAP,KAAckB,EAAd,KACAD,EAAAA,WAAgB,WACdC,EAASC,OAAOC,cACf,IAEH,IAAMC,GAAY,UAAAN,EAAKO,KAAKC,oBAAV,eAAwBf,QAAxB,QACZgB,EAAQT,EAAKU,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQV,SAAUA,EAAUR,MAAOa,GACjC,gBAAC,IAAD,CAAKb,MAAM,cACX,gBAACf,EAAD,KACmB,GAAhB+B,EAAMG,OAAc,KACnB,gBAAChC,EAAD,CAAeK,MAAOA,GACnBwB,EAAMI,KAAI,SAAAC,GACT,IAAMrB,EAAQqB,EAAKC,YAAYtB,OAAS,GAExC,OACE,gBAAC,EAAD,CACEC,GAAIoB,EAAKE,OAAOC,KAChBC,IAAKJ,EAAKE,OAAOC,KACjBxB,MAAOA,EACPE,YAAamB,EAAKC,YAAYpB,aAAemB,EAAKK","sources":["webpack://gatsby-starter-blog/./src/style/pages/index.js","webpack://gatsby-starter-blog/./src/style/components/card.js","webpack://gatsby-starter-blog/./src/components/card.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n  width: 90%;\r\n  margin-top: 50px;\r\n`\r\n\r\nexport const CardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${props => {\r\n    const cardNumber =\r\n      Math.floor((props.width * 9) / 10 / 250) == 0\r\n        ? 1\r\n        : Math.floor((props.width * 9) / 10 / 250)\r\n    let returnStr = \"250px\"\r\n    for (let i = 1; i < cardNumber; i++) {\r\n      returnStr += \" 250px\"\r\n    }\r\n    return returnStr\r\n  }};\r\n  grid-gap: 25px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n  width: 250px;\r\n  height: 300px;\r\n  border-bottom: 1px solid ${props => props.theme.text};\r\n  border-top: 1px solid ${props => props.theme.text};\r\n  display: flex;\r\n  flex: 100;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  flex: 20;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 2rem;\r\n  color: ${props => props.theme.text};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nexport const Description = styled.p`\r\n  flex: 50;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 1.4rem;\r\n  color: ${props => props.theme.text};\r\n  opacity: 0.5;\r\n`\r\n\r\nexport const Tags = styled.div`\r\n  flex: 30;\r\n`\r\n","import { navigate } from \"gatsby\"\r\nimport * as React from \"react\"\r\nimport { Container, Description, Tags, Title } from \"../style/components/card\"\r\n\r\nconst Card = ({ title, to, description }) => {\r\n  return (\r\n    <Container onClick={() => navigate(to)}>\r\n      <Title>{title}</Title>\r\n      <Description\r\n        dangerouslySetInnerHTML={{\r\n          __html: description,\r\n        }}\r\n      />\r\n      <Tags></Tags>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { CardContainer, Container } from \"../style/pages\"\r\nimport Card from \"../components/card\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const [width, setWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    setWidth(window.innerWidth)\r\n  }, [])\r\n\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"All posts\" />\r\n      <Container>\r\n        {posts.length == 0 ? null : (\r\n          <CardContainer width={width}>\r\n            {posts.map(post => {\r\n              const title = post.frontmatter.title || \"\"\r\n\r\n              return (\r\n                <Card\r\n                  to={post.fields.slug}\r\n                  key={post.fields.slug}\r\n                  title={title}\r\n                  description={post.frontmatter.description || post.excerpt}\r\n                />\r\n              )\r\n            })}\r\n          </CardContainer>\r\n        )}\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Container","styled","CardContainer","props","cardNumber","Math","floor","width","returnStr","i","theme","text","Title","Description","Tags","title","to","description","onClick","navigate","dangerouslySetInnerHTML","__html","data","location","React","setWidth","window","innerWidth","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","map","post","frontmatter","fields","slug","key","excerpt"],"sourceRoot":""}