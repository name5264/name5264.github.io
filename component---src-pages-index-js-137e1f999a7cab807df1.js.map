{"version":3,"file":"component---src-pages-index-js-137e1f999a7cab807df1.js","mappings":"iOAEaA,EAAYC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,gCAKTC,EAAgBD,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,2DAEC,SAAAE,GAMvB,IALA,IAAMC,EACwC,GAA5CC,KAAKC,MAAqB,EAAdH,EAAMI,MAAa,GAAK,KAChC,EACAF,KAAKC,MAAqB,EAAdH,EAAMI,MAAa,GAAK,KACtCC,EAAY,QACPC,EAAI,EAAGA,EAAIL,EAAYK,IAC9BD,GAAa,SAEf,OAAOA,KChBER,EAAYC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,uDCMtB,EAJa,SAAC,GAAsB,IAApBS,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GACxB,OAAO,gBAAC,EAAD,CAAWC,QAAS,kBAAMC,EAAAA,EAAAA,UAASF,KAAMD,ICuGlD,EApGkB,SAAC,GAAwB,IAAD,EAArBI,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzB,EAA0BC,EAAAA,SAAe,GAAlCT,EAAP,KAAcU,EAAd,KACAD,EAAAA,WAAgB,WACdC,EAASC,OAAOC,cACf,IAEH,IAAMC,GAAY,UAAAN,EAAKO,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQV,EAAKW,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQZ,SAAUA,EAAUQ,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,uLAUJ,gBAAC,IAAD,CAAQR,SAAUA,EAAUQ,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,gBAACvB,EAAD,KACE,gBAACE,EAAD,CAAeK,MAAOA,GACnBiB,EAAMI,KAAI,SAAAC,GACT,IAAMN,EAAQM,EAAKC,YAAYP,OAAS,GAExC,OACE,gBAAC,EAAD,CAAMZ,GAAIkB,EAAKE,OAAOC,KAAMC,IAAKJ,EAAKE,OAAOC,MAA7C,QACQT,EACN,2BAFF,OAGOM,EAAKC,YAAYI,aAAeL,EAAKM","sources":["webpack://gatsby-starter-blog/./src/style/pages/index.js","webpack://gatsby-starter-blog/./src/style/components/card.js","webpack://gatsby-starter-blog/./src/components/card.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n  width: 90%;\r\n  margin-top: 50px;\r\n`\r\n\r\nexport const CardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${props => {\r\n    const cardNumber =\r\n      Math.floor((props.width * 9) / 10 / 250) == 0\r\n        ? 1\r\n        : Math.floor((props.width * 9) / 10 / 250)\r\n    let returnStr = \"250px\"\r\n    for (let i = 1; i < cardNumber; i++) {\r\n      returnStr += \" 250px\"\r\n    }\r\n    return returnStr\r\n  }};\r\n  grid-gap: 25px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n  width: 250px;\r\n  height: 300px;\r\n  background-color: tomato;\r\n`\r\n","import { navigate } from \"gatsby\"\r\nimport * as React from \"react\"\r\nimport { Container } from \"../style/components/card\"\r\n\r\nconst Card = ({ children, to }) => {\r\n  return <Container onClick={() => navigate(to)}>{children}</Container>\r\n}\r\n\r\nexport default Card\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { CardContainer, Container } from \"../style/pages\"\r\nimport Card from \"../components/card\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const [width, setWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    setWidth(window.innerWidth)\r\n  }, [])\r\n\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo title=\"All posts\" />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"All posts\" />\r\n      <Container>\r\n        <CardContainer width={width}>\r\n          {posts.map(post => {\r\n            const title = post.frontmatter.title || \"\"\r\n\r\n            return (\r\n              <Card to={post.fields.slug} key={post.fields.slug}>\r\n                타이틀: {title}\r\n                <br />\r\n                내용: {post.frontmatter.description || post.excerpt}\r\n              </Card>\r\n            )\r\n          })}\r\n        </CardContainer>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n// const BlogIndex = ({ data, location }) => {\r\n//   const siteTitle = data.site.siteMetadata?.title || `Title`\r\n//   const posts = data.allMarkdownRemark.nodes\r\n\r\n//   if (posts.length === 0) {\r\n//     return (\r\n//       <Layout location={location} title={siteTitle}>\r\n//         <Seo title=\"All posts\" />\r\n//         <p>\r\n//           No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n//           directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n//           gatsby-config.js).\r\n//         </p>\r\n//       </Layout>\r\n//     )\r\n//   }\r\n\r\n//   return (\r\n//     <Layout location={location} title={siteTitle}>\r\n//       <Seo title=\"All posts\" />\r\n//       <ol style={{ listStyle: `none` }}>\r\n//         {posts.map(post => {\r\n//           const title = post.frontmatter.title || post.fields.slug\r\n\r\n//           return (\r\n//             <li key={post.fields.slug}>\r\n//               <article\r\n//                 className=\"post-list-item\"\r\n//                 itemScope\r\n//                 itemType=\"http://schema.org/Article\"\r\n//               >\r\n//                 <header>\r\n//                   <h2>\r\n//                     <Link to={post.fields.slug} itemProp=\"url\">\r\n//                       <span itemProp=\"headline\">{title}</span>\r\n//                     </Link>\r\n//                   </h2>\r\n//                   <small>{post.frontmatter.date}</small>\r\n//                 </header>\r\n//                 <section>\r\n//                   <p\r\n//                     dangerouslySetInnerHTML={{\r\n//                       __html: post.frontmatter.description || post.excerpt,\r\n//                     }}\r\n//                     itemProp=\"description\"\r\n//                   />\r\n//                 </section>\r\n//               </article>\r\n//             </li>\r\n//           )\r\n//         })}\r\n//       </ol>\r\n//     </Layout>\r\n//   )\r\n// }\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Container","styled","CardContainer","props","cardNumber","Math","floor","width","returnStr","i","children","to","onClick","navigate","data","location","React","setWidth","window","innerWidth","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","map","post","frontmatter","fields","slug","key","description","excerpt"],"sourceRoot":""}