{"version":3,"file":"component---src-templates-tags-js-f815a1e48965f3d4a3f6.js","mappings":"iMAEaA,EAAYC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,gIAGO,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QACxB,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAMlCC,EAAQJ,EAAAA,QAAAA,GAAAA,WAAH,uDAAGA,CAAH,6GAIP,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAKnBE,EAAcL,EAAAA,QAAAA,EAAAA,WAAH,6DAAGA,CAAH,2FAIb,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAInBG,EAAON,EAAAA,QAAAA,IAAAA,WAAH,sDAAGA,CAAH,c,UCNjB,EAlBa,SAAC,GAAqC,IAAnCO,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,IACtC,OACE,gBAACX,EAAD,CAAWY,QAAS,kBAAMC,EAAAA,EAAAA,UAASJ,KACjC,gBAACJ,EAAD,KAAQG,GACR,gBAACF,EAAD,CACEQ,wBAAyB,CACvBC,OAAQL,KAGZ,gBAACH,EAAD,KACGI,EAAIK,MAAM,EAAG,GAAGC,KAAI,SAAAC,GAAO,OAC1B,gBAAC,IAAD,CAAKA,QAASA,W,6ECdXC,EAAelB,EAAAA,QAAAA,KAAAA,WAAH,6DAAGA,CAAH,mNACH,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAEhC,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAWnBgB,EAAUnB,EAAAA,QAAAA,KAAAA,WAAH,wDAAGA,CAAH,wBAIPoB,EAAUpB,EAAAA,QAAAA,KAAAA,WAAH,wDAAGA,CAAH,M,UCDpB,EAfY,SAAC,GAA2B,IAAzBiB,EAAwB,EAAxBA,QAASI,EAAe,EAAfA,SACtB,OAAIJ,EAEA,gBAACC,EAAD,CAAcP,QAAS,kBAAMC,EAAAA,EAAAA,UAAS,QAAQK,KAC5C,gBAACE,EAAD,UACA,gBAACC,EAAD,KACGH,EACAI,EAAQ,KAAQA,EAAR,IAAsB,OAKhC,O,0FCdItB,EAAYC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,gCAKTsB,EAAgBtB,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,2DAEC,SAAAC,GAMvB,IALA,IAAMsB,EACyC,IAA7CC,KAAKC,MAAqB,EAAdxB,EAAMyB,MAAa,GAAK,KAChC,EACAF,KAAKC,MAAqB,EAAdxB,EAAMyB,MAAa,GAAK,KACtCC,EAAY,QACPC,EAAI,EAAGA,EAAIL,EAAYK,IAC9BD,GAAa,SAEf,OAAOA,M,oGChBEvB,E,QAAQJ,QAAAA,GAAAA,WAAH,sDAAGA,CAAH,iDAEP,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,Q,8BC2ChC,EApCa,SAAC,GAAqC,IAAnC0B,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjC,EAA0BC,EAAAA,SAAe,GAAlCN,EAAP,KAAcO,EAAd,KACAD,EAAAA,WAAgB,WACdC,EAASC,OAAOC,cACf,IACH,IAAQzB,EAAQmB,EAARnB,IACA0B,EAAUN,EAAKO,OAAfD,MACFE,EAAYR,EAAKS,KAAKC,aAAajC,MAEzC,OACE,gBAAC,IAAD,CAAQwB,SAAUA,EAAUxB,MAAO+B,GACjC,gBAAC,IAAD,CAAK/B,MAAOG,IACZ,gBAACN,EAAD,KACE,gBAAC,IAAD,CAAKa,QAASP,KAEhB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAegB,MAAOA,GACnBU,EAAMpB,KAAI,YAAgC,IAArByB,EAAoB,EAA5BC,KAAQD,YACdlC,EAAQkC,EAAYlC,OAAS,GAEnC,OACE,gBAAC,IAAD,CACEC,GAAE,SAAWD,EAAX,IACFoC,IAAG,SAAWjC,EACdH,MAAOA,EACPE,YAAagC,EAAYhC,YACzBC,IAAK+B,EAAYG","sources":["webpack://gatsby-starter-blog/./src/style/components/card.js","webpack://gatsby-starter-blog/./src/components/card.js","webpack://gatsby-starter-blog/./src/style/components/tags.js","webpack://gatsby-starter-blog/./src/components/tag.js","webpack://gatsby-starter-blog/./src/style/pages/index.js","webpack://gatsby-starter-blog/./src/style/templates/tags.js","webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n  width: 250px;\r\n  height: 300px;\r\n  border-bottom: 1px solid ${props => props.theme.text};\r\n  border-top: 1px solid ${props => props.theme.text};\r\n  display: flex;\r\n  flex: 100;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  flex: 20;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 2rem;\r\n  color: ${props => props.theme.text};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nexport const Description = styled.p`\r\n  flex: 50;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 1.4rem;\r\n  color: ${props => props.theme.text};\r\n  opacity: 0.5;\r\n`\r\n\r\nexport const Tags = styled.div`\r\n  flex: 30;\r\n`\r\n","import { navigate } from \"gatsby\"\r\nimport * as React from \"react\"\r\nimport { Container, Description, Tags, Title } from \"../style/components/card\"\r\nimport Tag from \"./tag\"\r\n\r\nconst Card = ({ title, to, description, tag }) => {\r\n  return (\r\n    <Container onClick={() => navigate(to)}>\r\n      <Title>{title}</Title>\r\n      <Description\r\n        dangerouslySetInnerHTML={{\r\n          __html: description,\r\n        }}\r\n      />\r\n      <Tags>\r\n        {tag.slice(0, 2).map(tagName => (\r\n          <Tag tagName={tagName} />\r\n        ))}\r\n      </Tags>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import styled from \"styled-components\"\r\n\r\nexport const TagContainer = styled.span`\r\n  border: 1px solid ${props => props.theme.text};\r\n  padding: 5px 15px;\r\n  color: ${props => props.theme.text};\r\n  text-align: center;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-weight: 300;\r\n  font-size: 1.4rem;\r\n  border-radius: 50px;\r\n  line-height: 5rem;\r\n  margin: 0 8px;\r\n  white-space: nowrap;\r\n`\r\n\r\nexport const Hashtag = styled.span`\r\n  padding-right: 5px;\r\n`\r\n\r\nexport const TagName = styled.span``\r\n","import * as React from \"react\"\r\nimport { Hashtag, TagContainer, TagName } from \"../style/components/tags\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nconst Tag = ({ tagName, children }) => {\r\n  if (tagName) {\r\n    return (\r\n      <TagContainer onClick={() => navigate(`/tag/${tagName}`)}>\r\n        <Hashtag>#</Hashtag>\r\n        <TagName>\r\n          {tagName}\r\n          {children ? ` (${children})` : null}\r\n        </TagName>\r\n      </TagContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default Tag\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n  width: 90%;\r\n  margin-top: 50px;\r\n`\r\n\r\nexport const CardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${props => {\r\n    const cardNumber =\r\n      Math.floor((props.width * 9) / 10 / 250) === 0\r\n        ? 1\r\n        : Math.floor((props.width * 9) / 10 / 250)\r\n    let returnStr = \"250px\"\r\n    for (let i = 1; i < cardNumber; i++) {\r\n      returnStr += \" 250px\"\r\n    }\r\n    return returnStr\r\n  }};\r\n  grid-gap: 25px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  color: ${props => props.theme.text};\r\n  font-size: 3rem;\r\n`\r\n","import * as React from \"react\"\r\n\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { Title } from \"../style/templates/tags\"\r\nimport Tag from \"../components/tag\"\r\nimport Card from \"../components/card\"\r\n\r\nimport { CardContainer, Container } from \"../style/pages\"\r\n\r\nconst Tags = ({ pageContext, data, location }) => {\r\n  const [width, setWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    setWidth(window.innerWidth)\r\n  }, [])\r\n  const { tag } = pageContext\r\n  const { edges } = data.allMdx\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title={tag} />\r\n      <Title>\r\n        <Tag tagName={tag} />\r\n      </Title>\r\n      <Container>\r\n        <CardContainer width={width}>\r\n          {edges.map(({ node: { frontmatter } }) => {\r\n            const title = frontmatter.title || \"\"\r\n\r\n            return (\r\n              <Card\r\n                to={`/post/${title}/`}\r\n                key={`title-${tag}`}\r\n                title={title}\r\n                description={frontmatter.description}\r\n                tag={frontmatter.tags}\r\n              />\r\n            )\r\n          })}\r\n        </CardContainer>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query ($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            tags\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Container","styled","props","theme","text","Title","Description","Tags","title","to","description","tag","onClick","navigate","dangerouslySetInnerHTML","__html","slice","map","tagName","TagContainer","Hashtag","TagName","children","CardContainer","cardNumber","Math","floor","width","returnStr","i","pageContext","data","location","React","setWidth","window","innerWidth","edges","allMdx","siteTitle","site","siteMetadata","frontmatter","node","key","tags"],"sourceRoot":""}